---
layout: post
title:  "Quizz #2: OOP"
---

<h2>Quizz 2 - OOP</h2>

<div class="question">
  Describe this code line-by-line.
</div>

```ruby
first_name = ["Pierre", "Paul", "Jacques"].sample
last_name = "Paillard"
puts "Great! #{first_name} #{last_name} is born"
```
<div class="answer">
  <ol>
    <li></li>
    <li></li>
    <li></li>
  </ol>
</div>

<div class="question">
  What's <code>initialize</code>? When is it called and what's its purpose?
</div>
<div class="big answer">

</div>

<div class="question">
  Consider this code. What's the difference between <code>string</code> and <code>String</code>?
</div>

```ruby
string = String.new("Hello World")
```

<div class="answer"></div>

<div class="question">
  What does this method do?
</div>

```ruby
def mystery_method(pets)
  mammal_pets = []
  for pet in pets
    mammal_pets << pet if pet.mammal?
  end
  return mammal_pets
end
```

<div class="answer">

</div>

<div class="question">
  Re-implement previous method <code>mystery_method</code> using a nice <code>iterator</code> instead.
</div>

```ruby
pets = [ MysteryObject.new("mouse"), MysteryObject.new("hummingbird") ]





```

<div style="page-break-after:always;"></div>

<div class="question">
Write an <code>Animal</code> class that could be use in place of the <code>MysteryObject</code> at Q5. Implement
a <code>mammal?</code> instance method that would work with the code at Q4.
</div>

```ruby
class





```

<div class="question">
  Write a class <code>Dog</code> which inherits from <code>Animal</code>. How <code>mammal?</code> should be overriden?
</div>

```ruby
class





```

<div class="question">
  Consider this code
</div>

```ruby
class Fish
  def self.overview()
    return "Fishes can live in the sea"
  end
  def swim
    # I'm swimming
  end
end
```

<p>Please, write some code <strong>calling</strong> both methods <code>overview</code> and <code>swim</code>.</p>


```ruby
# TODO: use overview and swim


````

<div class="question">
  Let's define 2 classes, <code>Liquid</code> and <code>Alcohol</code>.
</div>

```ruby
class Liquid
  def drink
    puts "You drank some liquid"
  end
  def evaporate
    puts "There is no more liquid"
  end
end

class Alcohol < Liquid
  def drink
    puts "You are now drunk"
  end
end
```

<p>What is printed line 2 and 3 of the following ruby script?</p>

```ruby
beer = Alcohol.new
beer.drink
beer.evaporate
```

<div class="answer">
  2.<br />
  3.
</div>

```ruby
class Liquid
  def drink
    puts "You drank some liquid"
  end
  def evaporate
    puts "There is no more liquid"
  end
end

class Alcohol < Liquid
  def drink
    super
    puts "You are now drunk"
  end
end
```
<p>Same question with this new <code>drink</code> method. What is printed on line 2 and 3.</p>
```ruby
beer = Alcohol.new
beer.drink
beer.evaporate
```

<div class="answer">
  2.<br />
  3.
</div>

